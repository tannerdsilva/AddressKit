import BigInt

fileprivate let maxVal = BigUInt("340282366920938463463374607431768211455")

fileprivate let PRIVATE_RANGE = NetworkV6(cidr:"fd00::/8")!

fileprivate let RESERVED_RANGES = [
	PRIVATE_RANGE,
	NetworkV6(cidr:"::/128")!,
	NetworkV6(cidr:"::1/128")!,
	NetworkV6(cidr:"::ffff:0:0/96")!,
	NetworkV6(cidr:"::ffff:0:0:0/96")!,
	NetworkV6(cidr:"64:ff9b::/96")!,
	NetworkV6(cidr:"64:ff9b:1::/48")!,
	NetworkV6(cidr:"100::/64")!,
	NetworkV6(cidr:"2001:0000:/32")!,
	NetworkV6(cidr:"2001:20::/28")!,
	NetworkV6(cidr:"2001:db8::/32")!,
	NetworkV6(cidr:"2002::/16")!,
	NetworkV6(cidr:"fc00::/7")!,
	NetworkV6(cidr:"fe80::/10")!,
	NetworkV6(cidr:"ff00::/8")!
]

public struct AddressV6:Address {
	public let integer:BigUInt
	public var string:String {
		get {
			let one = String((self.integer >> 112) & 0xFFFF, radix:16) + ":"
			let two = String((self.integer >> 96) & 0xFFFF, radix:16) + ":"
			let three = String((self.integer >> 80) & 0xFFFF, radix:16) + ":"
			let four = String((self.integer >> 64) & 0xFFFF, radix:16) + ":"
			let five = String((self.integer >> 48) & 0xFFFF, radix:16) + ":"
			let six = String((self.integer >> 32) & 0xFFFF, radix:16) + ":"
			let seven = String((self.integer >> 16) & 0xFFFF, radix:16) + ":"
			let eight = String(self.integer & 0xFFFF, radix:16)
		
			return one + two + three + four + five + six + seven + eight
		}
	}

	public var isPrivate:Bool {
		get {
			return PRIVATE_RANGE.contains(self)
		}
	}
	
	public var isReserved:Bool {
		get {
			for range in RESERVED_RANGES {
				if (range.contains(self)) {
					return true
				}
			}
			return false
		}
	}
	
	//FIXME: undefined behavior if a malformed IPv6 string is passed. will likely return nil but this is not always the case
	public init?(_ stringRep:String) {
		let octetStrings = stringRep.split(separator:":", omittingEmptySubsequences:false)
		var octets = [BigUInt]()
		var compressionIndex:Int? = nil
		for (n, octet) in octetStrings.enumerated() {
			if octet.count == 0 {
				if compressionIndex == nil {
					octets.append(0)
					compressionIndex = n
				} else {
					
				}
			} else {
				guard let asInt = UInt16(octet, radix:16) else {
					return nil
				}
				octets.append(BigUInt(asInt))
			}
		}
		if octets.count > 8 {
			return nil
		} else if octets.count < 8 {
			guard compressionIndex != nil else {
				return nil
			}
			repeat {
				octets.insert(0, at:compressionIndex!)
			} while octets.count < 8
		}
		var total:BigUInt = 0
		for i in stride(from:7, through:0, by:-1) {
			total += octets[7-i] << (i * 16)
		}
		self.integer = total
	}
	
	public init(_ value:BigUInt) {
		guard value <= maxVal else {
			fatalError("value is out of bounds of unsigned 128 bit integer")
		}
		self.integer = value
	}
	
	public static func < (lhs:AddressV6, rhs:AddressV6) -> Bool {
		return lhs.integer < rhs.integer
	}
	
	public static func <= (lhs:AddressV6, rhs:AddressV6) -> Bool {
		return lhs.integer <= rhs.integer
	}
	
	public static func > (lhs:AddressV6, rhs:AddressV6) -> Bool {
		return lhs.integer > rhs.integer
	}
	
	public static func >= (lhs:AddressV6, rhs:AddressV6) -> Bool {
		return lhs.integer >= rhs.integer
	}
	
	public static func + (left:AddressV6, adjustment:BigInt) -> AddressV6 {
		let value = BigInt(left.integer) + adjustment
		return AddressV6(BigUInt(value))
	}
	
	public static func - (left:AddressV6, adjustment:BigInt) -> AddressV6 {
		let value = BigInt(left.integer) - adjustment
		return AddressV6(BigUInt(value))
	}

	public func hash(into hasher:inout Hasher) {
		hasher.combine(self.integer)
	}
}

public struct RangeV6:Range {
	public var string:String {
		get {
			return self.lower.string + "-" + self.upper.string
		}
	}
	
	public let lower:AddressV6
	public let upper:AddressV6
	public let count:BigUInt
	
	public init?(_ rangeString:String) {
		let splitData = rangeString.split(separator:"-", omittingEmptySubsequences:true)
		guard splitData.count == 2, splitData[0].count > 0, splitData[1].count > 0 else {
			return nil
		}
		guard let lower = AddressV6(String(splitData[0])), let upper = AddressV6(String(splitData[1])) else {
			return nil
		}
		self = RangeV6(lower:lower, upper:upper)
	}

	public init(lower:AddressV6, upper:AddressV6) {
		guard lower <= upper else {
			fatalError("lower is greater than upper")
		}
		self.upper = upper
		self.lower = lower
		self.count = upper.integer - lower.integer + 1
	}
	
	public func contains(_ addressV6:AddressV6) -> Bool {
		if lower <= addressV6 && upper >= addressV6 {
			return true
		}
		return false
	}
	
	public func randomAddress() -> AddressV6 {
		let randomIncrementFromBase = BigUInt.randomInteger(lessThan:count)
		return AddressV6(lower.integer + randomIncrementFromBase)
	}
}

public struct NetworkV6:Network {
	public var cidrString:String {
		get {
			return self.address.string + "/" + String(prefix)
		}
	}
	public let address:AddressV6
	public let netmask:AddressV6
	public let prefix:UInt8
	
	public let range:RangeV6

	public init?(cidr cidrV6:String) {
		let cidrSplit = cidrV6.split(separator:"/").compactMap { String($0) }
		guard cidrSplit.count == 2 else {
			return nil
		}
		guard let parseAddress = AddressV6(cidrSplit[0]), let parsePrefix = UInt8(cidrSplit[1]) else {
			return nil
		}
		self.address = parseAddress
		self.prefix = parsePrefix
		
		var buildNetmask:AddressV6
		switch parsePrefix {
			case 0:
				buildNetmask = AddressV6(BigUInt(0))
			case 1:
				buildNetmask = AddressV6(BigUInt("10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", radix:2)!)
			case 2:
				buildNetmask = AddressV6(BigUInt("11000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", radix:2)!)
			case 3:
				buildNetmask = AddressV6(BigUInt("11100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", radix:2)!)
			case 4:
				buildNetmask = AddressV6(BigUInt("11110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", radix:2)!)
			case 5:
				buildNetmask = AddressV6(BigUInt("11111000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", radix:2)!)
			case 6:
				buildNetmask = AddressV6(BigUInt("11111100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", radix:2)!)
			case 7:
				buildNetmask = AddressV6(BigUInt("11111110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", radix:2)!)
			case 8:
				buildNetmask = AddressV6(BigUInt("11111111000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", radix:2)!)
			case 9:
				buildNetmask = AddressV6(BigUInt("11111111100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", radix:2)!)
			case 10:
				buildNetmask = AddressV6(BigUInt("11111111110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", radix:2)!)
			case 11:
				buildNetmask = AddressV6(BigUInt("11111111111000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", radix:2)!)
			case 12:
				buildNetmask = AddressV6(BigUInt("11111111111100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", radix:2)!)
			case 13:
				buildNetmask = AddressV6(BigUInt("11111111111110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", radix:2)!)
			case 14:
				buildNetmask = AddressV6(BigUInt("11111111111111000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", radix:2)!)
			case 15:
				buildNetmask = AddressV6(BigUInt("11111111111111100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", radix:2)!)
			case 16:
				buildNetmask = AddressV6(BigUInt("11111111111111110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", radix:2)!)
			case 17:
				buildNetmask = AddressV6(BigUInt("11111111111111111000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", radix:2)!)
			case 18:
				buildNetmask = AddressV6(BigUInt("11111111111111111100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", radix:2)!)
			case 19:
				buildNetmask = AddressV6(BigUInt("11111111111111111110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", radix:2)!)
			case 20:
				buildNetmask = AddressV6(BigUInt("11111111111111111111000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", radix:2)!)
			case 21:
				buildNetmask = AddressV6(BigUInt("11111111111111111111100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", radix:2)!)
			case 22:
				buildNetmask = AddressV6(BigUInt("11111111111111111111110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", radix:2)!)
			case 23:
				buildNetmask = AddressV6(BigUInt("11111111111111111111111000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", radix:2)!)
			case 24:
				buildNetmask = AddressV6(BigUInt("11111111111111111111111100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", radix:2)!)
			case 25:
				buildNetmask = AddressV6(BigUInt("11111111111111111111111110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", radix:2)!)
			case 26:
				buildNetmask = AddressV6(BigUInt("11111111111111111111111111000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", radix:2)!)
			case 27:
				buildNetmask = AddressV6(BigUInt("11111111111111111111111111100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", radix:2)!)
			case 28:
				buildNetmask = AddressV6(BigUInt("11111111111111111111111111110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", radix:2)!)
			case 29:
				buildNetmask = AddressV6(BigUInt("11111111111111111111111111111000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", radix:2)!)
			case 30:
				buildNetmask = AddressV6(BigUInt("11111111111111111111111111111100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", radix:2)!)
			case 31:
				buildNetmask = AddressV6(BigUInt("11111111111111111111111111111110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", radix:2)!)
			case 32:
				buildNetmask = AddressV6(BigUInt("11111111111111111111111111111111000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", radix:2)!)
			case 33:
				buildNetmask = AddressV6(BigUInt("11111111111111111111111111111111100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", radix:2)!)
			case 34:
				buildNetmask = AddressV6(BigUInt("11111111111111111111111111111111110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", radix:2)!)
			case 35:
				buildNetmask = AddressV6(BigUInt("11111111111111111111111111111111111000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", radix:2)!)
			case 36:
				buildNetmask = AddressV6(BigUInt("11111111111111111111111111111111111100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", radix:2)!)
			case 37:
				buildNetmask = AddressV6(BigUInt("11111111111111111111111111111111111110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", radix:2)!)
			case 38:
				buildNetmask = AddressV6(BigUInt("11111111111111111111111111111111111111000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", radix:2)!)
			case 39:
				buildNetmask = AddressV6(BigUInt("11111111111111111111111111111111111111100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", radix:2)!)
			case 40:
				buildNetmask = AddressV6(BigUInt("11111111111111111111111111111111111111110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", radix:2)!)
			case 41:
				buildNetmask = AddressV6(BigUInt("11111111111111111111111111111111111111111000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", radix:2)!)
			case 42:
				buildNetmask = AddressV6(BigUInt("11111111111111111111111111111111111111111100000000000000000000000000000000000000000000000000000000000000000000000000000000000000", radix:2)!)
			case 43:
				buildNetmask = AddressV6(BigUInt("11111111111111111111111111111111111111111110000000000000000000000000000000000000000000000000000000000000000000000000000000000000", radix:2)!)
			case 44:
				buildNetmask = AddressV6(BigUInt("11111111111111111111111111111111111111111111000000000000000000000000000000000000000000000000000000000000000000000000000000000000", radix:2)!)
			case 45:
				buildNetmask = AddressV6(BigUInt("11111111111111111111111111111111111111111111100000000000000000000000000000000000000000000000000000000000000000000000000000000000", radix:2)!)
			case 46:
				buildNetmask = AddressV6(BigUInt("11111111111111111111111111111111111111111111110000000000000000000000000000000000000000000000000000000000000000000000000000000000", radix:2)!)
			case 47:
				buildNetmask = AddressV6(BigUInt("11111111111111111111111111111111111111111111111000000000000000000000000000000000000000000000000000000000000000000000000000000000", radix:2)!)
			case 48:
				buildNetmask = AddressV6(BigUInt("11111111111111111111111111111111111111111111111100000000000000000000000000000000000000000000000000000000000000000000000000000000", radix:2)!)
			case 49:
				buildNetmask = AddressV6(BigUInt("11111111111111111111111111111111111111111111111110000000000000000000000000000000000000000000000000000000000000000000000000000000", radix:2)!)
			case 50:
				buildNetmask = AddressV6(BigUInt("11111111111111111111111111111111111111111111111111000000000000000000000000000000000000000000000000000000000000000000000000000000", radix:2)!)
			case 51:
				buildNetmask = AddressV6(BigUInt("11111111111111111111111111111111111111111111111111100000000000000000000000000000000000000000000000000000000000000000000000000000", radix:2)!)
			case 52:
				buildNetmask = AddressV6(BigUInt("11111111111111111111111111111111111111111111111111110000000000000000000000000000000000000000000000000000000000000000000000000000", radix:2)!)
			case 53:
				buildNetmask = AddressV6(BigUInt("11111111111111111111111111111111111111111111111111111000000000000000000000000000000000000000000000000000000000000000000000000000", radix:2)!)
			case 54:
				buildNetmask = AddressV6(BigUInt("11111111111111111111111111111111111111111111111111111100000000000000000000000000000000000000000000000000000000000000000000000000", radix:2)!)
			case 55:
				buildNetmask = AddressV6(BigUInt("11111111111111111111111111111111111111111111111111111110000000000000000000000000000000000000000000000000000000000000000000000000", radix:2)!)
			case 56:
				buildNetmask = AddressV6(BigUInt("11111111111111111111111111111111111111111111111111111111000000000000000000000000000000000000000000000000000000000000000000000000", radix:2)!)
			case 57:
				buildNetmask = AddressV6(BigUInt("11111111111111111111111111111111111111111111111111111111100000000000000000000000000000000000000000000000000000000000000000000000", radix:2)!)
			case 58:
				buildNetmask = AddressV6(BigUInt("11111111111111111111111111111111111111111111111111111111110000000000000000000000000000000000000000000000000000000000000000000000", radix:2)!)
			case 59:
				buildNetmask = AddressV6(BigUInt("11111111111111111111111111111111111111111111111111111111111000000000000000000000000000000000000000000000000000000000000000000000", radix:2)!)
			case 60:
				buildNetmask = AddressV6(BigUInt("11111111111111111111111111111111111111111111111111111111111100000000000000000000000000000000000000000000000000000000000000000000", radix:2)!)
			case 61:
				buildNetmask = AddressV6(BigUInt("11111111111111111111111111111111111111111111111111111111111110000000000000000000000000000000000000000000000000000000000000000000", radix:2)!)
			case 62:
				buildNetmask = AddressV6(BigUInt("11111111111111111111111111111111111111111111111111111111111111000000000000000000000000000000000000000000000000000000000000000000", radix:2)!)
			case 63:
				buildNetmask = AddressV6(BigUInt("11111111111111111111111111111111111111111111111111111111111111100000000000000000000000000000000000000000000000000000000000000000", radix:2)!)
			case 64:
				buildNetmask = AddressV6(BigUInt("11111111111111111111111111111111111111111111111111111111111111110000000000000000000000000000000000000000000000000000000000000000", radix:2)!)
			case 65:
				buildNetmask = AddressV6(BigUInt("11111111111111111111111111111111111111111111111111111111111111111000000000000000000000000000000000000000000000000000000000000000", radix:2)!)
			case 66:
				buildNetmask = AddressV6(BigUInt("11111111111111111111111111111111111111111111111111111111111111111100000000000000000000000000000000000000000000000000000000000000", radix:2)!)
			case 67:
				buildNetmask = AddressV6(BigUInt("11111111111111111111111111111111111111111111111111111111111111111110000000000000000000000000000000000000000000000000000000000000", radix:2)!)
			case 68:
				buildNetmask = AddressV6(BigUInt("11111111111111111111111111111111111111111111111111111111111111111111000000000000000000000000000000000000000000000000000000000000", radix:2)!)
			case 69:
				buildNetmask = AddressV6(BigUInt("11111111111111111111111111111111111111111111111111111111111111111111100000000000000000000000000000000000000000000000000000000000", radix:2)!)
			case 70:
				buildNetmask = AddressV6(BigUInt("11111111111111111111111111111111111111111111111111111111111111111111110000000000000000000000000000000000000000000000000000000000", radix:2)!)
			case 71:
				buildNetmask = AddressV6(BigUInt("11111111111111111111111111111111111111111111111111111111111111111111111000000000000000000000000000000000000000000000000000000000", radix:2)!)
			case 72:
				buildNetmask = AddressV6(BigUInt("11111111111111111111111111111111111111111111111111111111111111111111111100000000000000000000000000000000000000000000000000000000", radix:2)!)
			case 73:
				buildNetmask = AddressV6(BigUInt("11111111111111111111111111111111111111111111111111111111111111111111111110000000000000000000000000000000000000000000000000000000", radix:2)!)
			case 74:
				buildNetmask = AddressV6(BigUInt("11111111111111111111111111111111111111111111111111111111111111111111111111000000000000000000000000000000000000000000000000000000", radix:2)!)
			case 75:
				buildNetmask = AddressV6(BigUInt("11111111111111111111111111111111111111111111111111111111111111111111111111100000000000000000000000000000000000000000000000000000", radix:2)!)
			case 76:
				buildNetmask = AddressV6(BigUInt("11111111111111111111111111111111111111111111111111111111111111111111111111110000000000000000000000000000000000000000000000000000", radix:2)!)
			case 77:
				buildNetmask = AddressV6(BigUInt("11111111111111111111111111111111111111111111111111111111111111111111111111111000000000000000000000000000000000000000000000000000", radix:2)!)
			case 78:
				buildNetmask = AddressV6(BigUInt("11111111111111111111111111111111111111111111111111111111111111111111111111111100000000000000000000000000000000000000000000000000", radix:2)!)
			case 79:
				buildNetmask = AddressV6(BigUInt("11111111111111111111111111111111111111111111111111111111111111111111111111111110000000000000000000000000000000000000000000000000", radix:2)!)
			case 80:
				buildNetmask = AddressV6(BigUInt("11111111111111111111111111111111111111111111111111111111111111111111111111111111000000000000000000000000000000000000000000000000", radix:2)!)
			case 81:
				buildNetmask = AddressV6(BigUInt("11111111111111111111111111111111111111111111111111111111111111111111111111111111100000000000000000000000000000000000000000000000", radix:2)!)
			case 82:
				buildNetmask = AddressV6(BigUInt("11111111111111111111111111111111111111111111111111111111111111111111111111111111110000000000000000000000000000000000000000000000", radix:2)!)
			case 83:
				buildNetmask = AddressV6(BigUInt("11111111111111111111111111111111111111111111111111111111111111111111111111111111111000000000000000000000000000000000000000000000", radix:2)!)
			case 84:
				buildNetmask = AddressV6(BigUInt("11111111111111111111111111111111111111111111111111111111111111111111111111111111111100000000000000000000000000000000000000000000", radix:2)!)
			case 85:
				buildNetmask = AddressV6(BigUInt("11111111111111111111111111111111111111111111111111111111111111111111111111111111111110000000000000000000000000000000000000000000", radix:2)!)
			case 86:
				buildNetmask = AddressV6(BigUInt("11111111111111111111111111111111111111111111111111111111111111111111111111111111111111000000000000000000000000000000000000000000", radix:2)!)
			case 87:
				buildNetmask = AddressV6(BigUInt("11111111111111111111111111111111111111111111111111111111111111111111111111111111111111100000000000000000000000000000000000000000", radix:2)!)
			case 88:
				buildNetmask = AddressV6(BigUInt("11111111111111111111111111111111111111111111111111111111111111111111111111111111111111110000000000000000000000000000000000000000", radix:2)!)
			case 89:
				buildNetmask = AddressV6(BigUInt("11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111000000000000000000000000000000000000000", radix:2)!)
			case 90:
				buildNetmask = AddressV6(BigUInt("11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111100000000000000000000000000000000000000", radix:2)!)
			case 91:
				buildNetmask = AddressV6(BigUInt("11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111110000000000000000000000000000000000000", radix:2)!)
			case 92:
				buildNetmask = AddressV6(BigUInt("11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111000000000000000000000000000000000000", radix:2)!)
			case 93:
				buildNetmask = AddressV6(BigUInt("11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111100000000000000000000000000000000000", radix:2)!)
			case 94:
				buildNetmask = AddressV6(BigUInt("11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111110000000000000000000000000000000000", radix:2)!)
			case 95:
				buildNetmask = AddressV6(BigUInt("11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111000000000000000000000000000000000", radix:2)!)
			case 96:
				buildNetmask = AddressV6(BigUInt("11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111100000000000000000000000000000000", radix:2)!)
			case 97:
				buildNetmask = AddressV6(BigUInt("11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111110000000000000000000000000000000", radix:2)!)
			case 98:
				buildNetmask = AddressV6(BigUInt("11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111000000000000000000000000000000", radix:2)!)
			case 99:
				buildNetmask = AddressV6(BigUInt("11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111100000000000000000000000000000", radix:2)!)
			case 100:
				buildNetmask = AddressV6(BigUInt("11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111110000000000000000000000000000", radix:2)!)
			case 101:
				buildNetmask = AddressV6(BigUInt("11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111000000000000000000000000000", radix:2)!)
			case 102:
				buildNetmask = AddressV6(BigUInt("11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111100000000000000000000000000", radix:2)!)
			case 103:
				buildNetmask = AddressV6(BigUInt("11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111110000000000000000000000000", radix:2)!)
			case 104:
				buildNetmask = AddressV6(BigUInt("11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111000000000000000000000000", radix:2)!)
			case 105:
				buildNetmask = AddressV6(BigUInt("11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111100000000000000000000000", radix:2)!)
			case 106:
				buildNetmask = AddressV6(BigUInt("11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111110000000000000000000000", radix:2)!)
			case 107:
				buildNetmask = AddressV6(BigUInt("11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111000000000000000000000", radix:2)!)
			case 108:
				buildNetmask = AddressV6(BigUInt("11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111100000000000000000000", radix:2)!)
			case 109:
				buildNetmask = AddressV6(BigUInt("11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111110000000000000000000", radix:2)!)
			case 110:
				buildNetmask = AddressV6(BigUInt("11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111000000000000000000", radix:2)!)
			case 111:
				buildNetmask = AddressV6(BigUInt("11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111100000000000000000", radix:2)!)
			case 112:
				buildNetmask = AddressV6(BigUInt("11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111110000000000000000", radix:2)!)
			case 113:
				buildNetmask = AddressV6(BigUInt("11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111000000000000000", radix:2)!)
			case 114:
				buildNetmask = AddressV6(BigUInt("11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111100000000000000", radix:2)!)
			case 115:
				buildNetmask = AddressV6(BigUInt("11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111110000000000000", radix:2)!)
			case 116:
				buildNetmask = AddressV6(BigUInt("11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111000000000000", radix:2)!)
			case 117:
				buildNetmask = AddressV6(BigUInt("11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111100000000000", radix:2)!)
			case 118:
				buildNetmask = AddressV6(BigUInt("11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111110000000000", radix:2)!)
			case 119:
				buildNetmask = AddressV6(BigUInt("11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111000000000", radix:2)!)
			case 120:
				buildNetmask = AddressV6(BigUInt("11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111100000000", radix:2)!)
			case 121:
				buildNetmask = AddressV6(BigUInt("11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111110000000", radix:2)!)
			case 122:
				buildNetmask = AddressV6(BigUInt("11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111000000", radix:2)!)
			case 123:
				buildNetmask = AddressV6(BigUInt("11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111100000", radix:2)!)
			case 124:
				buildNetmask = AddressV6(BigUInt("11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111110000", radix:2)!)
			case 125:
				buildNetmask = AddressV6(BigUInt("11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111000", radix:2)!)
			case 126:
				buildNetmask = AddressV6(BigUInt("11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111100", radix:2)!)
			case 127:
				buildNetmask = AddressV6(BigUInt("11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111110", radix:2)!)
			case 128:
				buildNetmask = AddressV6(BigUInt("11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111", radix:2)!)
			default:
				return nil
		}
		self.netmask = buildNetmask
		
		let startAddress = parseAddress.integer & buildNetmask.integer
		let range = buildNetmask.integer ^ maxVal
		let endAddress = startAddress + range
		
		self.range = RangeV6(lower:AddressV6(startAddress), upper:AddressV6(endAddress))
	}
	
	public init?(address:AddressV6, netmask:AddressV6) {
		self.address = address
		self.netmask = netmask

		let getPrefix:UInt8
		switch netmask.integer {
			case BigUInt("0"):
				getPrefix = 0
			case BigUInt("170141183460469231731687303715884105728"):
				getPrefix = 1
			case BigUInt("255211775190703847597530955573826158592"):
				getPrefix = 2
			case BigUInt("297747071055821155530452781502797185024"):
				getPrefix = 3
			case BigUInt("319014718988379809496913694467282698240"):
				getPrefix = 4
			case BigUInt("329648542954659136480144150949525454848"):
				getPrefix = 5
			case BigUInt("334965454937798799971759379190646833152"):
				getPrefix = 6
			case BigUInt("337623910929368631717566993311207522304"):
				getPrefix = 7
			case BigUInt("338953138925153547590470800371487866880"):
				getPrefix = 8
			case BigUInt("339617752923046005526922703901628039168"):
				getPrefix = 9
			case BigUInt("339950059921992234495148655666698125312"):
				getPrefix = 10
			case BigUInt("340116213421465348979261631549233168384"):
				getPrefix = 11
			case BigUInt("340199290171201906221318119490500689920"):
				getPrefix = 12
			case BigUInt("340240828546070184842346363461134450688"):
				getPrefix = 13
			case BigUInt("340261597733504324152860485446451331072"):
				getPrefix = 14
			case BigUInt("340271982327221393808117546439109771264"):
				getPrefix = 15
			case BigUInt("340277174624079928635746076935438991360"):
				getPrefix = 16
			case BigUInt("340279770772509196049560342183603601408"):
				getPrefix = 17
			case BigUInt("340281068846723829756467474807685906432"):
				getPrefix = 18
			case BigUInt("340281717883831146609921041119727058944"):
				getPrefix = 19
			case BigUInt("340282042402384805036647824275747635200"):
				getPrefix = 20
			case BigUInt("340282204661661634250011215853757923328"):
				getPrefix = 21
			case BigUInt("340282285791300048856692911642763067392"):
				getPrefix = 22
			case BigUInt("340282326356119256160033759537265639424"):
				getPrefix = 23
			case BigUInt("340282346638528859811704183484516925440"):
				getPrefix = 24
			case BigUInt("340282356779733661637539395458142568448"):
				getPrefix = 25
			case BigUInt("340282361850336062550457001444955389952"):
				getPrefix = 26
			case BigUInt("340282364385637263006915804438361800704"):
				getPrefix = 27
			case BigUInt("340282365653287863235145205935065006080"):
				getPrefix = 28
			case BigUInt("340282366287113163349259906683416608768"):
				getPrefix = 29
			case BigUInt("340282366604025813406317257057592410112"):
				getPrefix = 30
			case BigUInt("340282366762482138434845932244680310784"):
				getPrefix = 31
			case BigUInt("340282366841710300949110269838224261120"):
				getPrefix = 32
			case BigUInt("340282366881324382206242438634996236288"):
				getPrefix = 33
			case BigUInt("340282366901131422834808523033382223872"):
				getPrefix = 34
			case BigUInt("340282366911034943149091565232575217664"):
				getPrefix = 35
			case BigUInt("340282366915986703306233086332171714560"):
				getPrefix = 36
			case BigUInt("340282366918462583384803846881969963008"):
				getPrefix = 37
			case BigUInt("340282366919700523424089227156869087232"):
				getPrefix = 38
			case BigUInt("340282366920319493443731917294318649344"):
				getPrefix = 39
			case BigUInt("340282366920628978453553262363043430400"):
				getPrefix = 40
			case BigUInt("340282366920783720958463934897405820928"):
				getPrefix = 41
			case BigUInt("340282366920861092210919271164587016192"):
				getPrefix = 42
			case BigUInt("340282366920899777837146939298177613824"):
				getPrefix = 43
			case BigUInt("340282366920919120650260773364972912640"):
				getPrefix = 44
			case BigUInt("340282366920928792056817690398370562048"):
				getPrefix = 45
			case BigUInt("340282366920933627760096148915069386752"):
				getPrefix = 46
			case BigUInt("340282366920936045611735378173418799104"):
				getPrefix = 47
			case BigUInt("340282366920937254537554992802593505280"):
				getPrefix = 48
			case BigUInt("340282366920937859000464800117180858368"):
				getPrefix = 49
			case BigUInt("340282366920938161231919703774474534912"):
				getPrefix = 50
			case BigUInt("340282366920938312347647155603121373184"):
				getPrefix = 51
			case BigUInt("340282366920938387905510881517444792320"):
				getPrefix = 52
			case BigUInt("340282366920938425684442744474606501888"):
				getPrefix = 53
			case BigUInt("340282366920938444573908675953187356672"):
				getPrefix = 54
			case BigUInt("340282366920938454018641641692477784064"):
				getPrefix = 55
			case BigUInt("340282366920938458741008124562122997760"):
				getPrefix = 56
			case BigUInt("340282366920938461102191365996945604608"):
				getPrefix = 57
			case BigUInt("340282366920938462282782986714356908032"):
				getPrefix = 58
			case BigUInt("340282366920938462873078797073062559744"):
				getPrefix = 59
			case BigUInt("340282366920938463168226702252415385600"):
				getPrefix = 60
			case BigUInt("340282366920938463315800654842091798528"):
				getPrefix = 61
			case BigUInt("340282366920938463389587631136930004992"):
				getPrefix = 62
			case BigUInt("340282366920938463426481119284349108224"):
				getPrefix = 63
			case BigUInt("340282366920938463444927863358058659840"):
				getPrefix = 64
			case BigUInt("340282366920938463454151235394913435648"):
				getPrefix = 65
			case BigUInt("340282366920938463458762921413340823552"):
				getPrefix = 66
			case BigUInt("340282366920938463461068764422554517504"):
				getPrefix = 67
			case BigUInt("340282366920938463462221685927161364480"):
				getPrefix = 68
			case BigUInt("340282366920938463462798146679464787968"):
				getPrefix = 69
			case BigUInt("340282366920938463463086377055616499712"):
				getPrefix = 70
			case BigUInt("340282366920938463463230492243692355584"):
				getPrefix = 71
			case BigUInt("340282366920938463463302549837730283520"):
				getPrefix = 72
			case BigUInt("340282366920938463463338578634749247488"):
				getPrefix = 73
			case BigUInt("340282366920938463463356593033258729472"):
				getPrefix = 74
			case BigUInt("340282366920938463463365600232513470464"):
				getPrefix = 75
			case BigUInt("340282366920938463463370103832140840960"):
				getPrefix = 76
			case BigUInt("340282366920938463463372355631954526208"):
				getPrefix = 77
			case BigUInt("340282366920938463463373481531861368832"):
				getPrefix = 78
			case BigUInt("340282366920938463463374044481814790144"):
				getPrefix = 79
			case BigUInt("340282366920938463463374325956791500800"):
				getPrefix = 80
			case BigUInt("340282366920938463463374466694279856128"):
				getPrefix = 81
			case BigUInt("340282366920938463463374537063024033792"):
				getPrefix = 82
			case BigUInt("340282366920938463463374572247396122624"):
				getPrefix = 83
			case BigUInt("340282366920938463463374589839582167040"):
				getPrefix = 84
			case BigUInt("340282366920938463463374598635675189248"):
				getPrefix = 85
			case BigUInt("340282366920938463463374603033721700352"):
				getPrefix = 86
			case BigUInt("340282366920938463463374605232744955904"):
				getPrefix = 87
			case BigUInt("340282366920938463463374606332256583680"):
				getPrefix = 88
			case BigUInt("340282366920938463463374606882012397568"):
				getPrefix = 89
			case BigUInt("340282366920938463463374607156890304512"):
				getPrefix = 90
			case BigUInt("340282366920938463463374607294329257984"):
				getPrefix = 91
			case BigUInt("340282366920938463463374607363048734720"):
				getPrefix = 92
			case BigUInt("340282366920938463463374607397408473088"):
				getPrefix = 93
			case BigUInt("340282366920938463463374607414588342272"):
				getPrefix = 94
			case BigUInt("340282366920938463463374607423178276864"):
				getPrefix = 95
			case BigUInt("340282366920938463463374607427473244160"):
				getPrefix = 96
			case BigUInt("340282366920938463463374607429620727808"):
				getPrefix = 97
			case BigUInt("340282366920938463463374607430694469632"):
				getPrefix = 98
			case BigUInt("340282366920938463463374607431231340544"):
				getPrefix = 99
			case BigUInt("340282366920938463463374607431499776000"):
				getPrefix = 100
			case BigUInt("340282366920938463463374607431633993728"):
				getPrefix = 101
			case BigUInt("340282366920938463463374607431701102592"):
				getPrefix = 102
			case BigUInt("340282366920938463463374607431734657024"):
				getPrefix = 103
			case BigUInt("340282366920938463463374607431751434240"):
				getPrefix = 104
			case BigUInt("340282366920938463463374607431759822848"):
				getPrefix = 105
			case BigUInt("340282366920938463463374607431764017152"):
				getPrefix = 106
			case BigUInt("340282366920938463463374607431766114304"):
				getPrefix = 107
			case BigUInt("340282366920938463463374607431767162880"):
				getPrefix = 108
			case BigUInt("340282366920938463463374607431767687168"):
				getPrefix = 109
			case BigUInt("340282366920938463463374607431767949312"):
				getPrefix = 110
			case BigUInt("340282366920938463463374607431768080384"):
				getPrefix = 111
			case BigUInt("340282366920938463463374607431768145920"):
				getPrefix = 112
			case BigUInt("340282366920938463463374607431768178688"):
				getPrefix = 113
			case BigUInt("340282366920938463463374607431768195072"):
				getPrefix = 114
			case BigUInt("340282366920938463463374607431768203264"):
				getPrefix = 115
			case BigUInt("340282366920938463463374607431768207360"):
				getPrefix = 116
			case BigUInt("340282366920938463463374607431768209408"):
				getPrefix = 117
			case BigUInt("340282366920938463463374607431768210432"):
				getPrefix = 118
			case BigUInt("340282366920938463463374607431768210944"):
				getPrefix = 119
			case BigUInt("340282366920938463463374607431768211200"):
				getPrefix = 120
			case BigUInt("340282366920938463463374607431768211328"):
				getPrefix = 121
			case BigUInt("340282366920938463463374607431768211392"):
				getPrefix = 122
			case BigUInt("340282366920938463463374607431768211424"):
				getPrefix = 123
			case BigUInt("340282366920938463463374607431768211440"):
				getPrefix = 124
			case BigUInt("340282366920938463463374607431768211448"):
				getPrefix = 125
			case BigUInt("340282366920938463463374607431768211452"):
				getPrefix = 126
			case BigUInt("340282366920938463463374607431768211454"):
				getPrefix = 127
			case BigUInt("340282366920938463463374607431768211455"):
				getPrefix = 128
			default:
				return nil
		}
		self.prefix = getPrefix
		
		let startAddress = address.integer & netmask.integer
		let range = netmask.integer ^ maxVal
		let endAddress = startAddress + range
		self.range = RangeV6(lower:AddressV6(startAddress), upper:AddressV6(endAddress))
	}
	
	public func contains(_ addressV6:AddressV6) -> Bool {
		if (range.lower <= addressV6 && range.upper >= addressV6) {
			return true
		} else {
			return false
		}
	}
}